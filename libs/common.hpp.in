//  managedFlu - OpenFOAM C++ interactive functionality API
//  Copyright (C) 2010- Alexey Petrov
//  
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//  
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//  
//  You should have received a copy of the GNU General Public License
//  along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
//  See http://sourceforge.net/projects/pythonflu
//
//  Author : Alexey PETROV, Andrey Simurzin


//---------------------------------------------------------------------------
#ifndef common_hpp
#define common_hpp


//---------------------------------------------------------------------------
#define BRACKETLEFT <
#define BRACKETRIGHT >
#define SUFFIX _@MANAGEDFLU_HEADER_SUFFIX@.

#define FILENAME(Type,Ext) BRACKETLEFT Type SUFFIX Ext BRACKETRIGHT

@CXX_DEFINE_BRANCHES@

#define FOAM_VERSION( CMP, VERSION ) \
  __FOAM_VERSION__ CMP VERSION 

#define FOAM_BRANCH( NAME ) \
  defined( __FOAM_BRANCH__ ) && __FOAM_BRANCH__ == NAME

#define FOAM_NOT_BRANCH( NAME ) \
  !defined( __FOAM_BRANCH__ ) || __FOAM_BRANCH__ != NAME

#define FOAM_BRANCH_VERSION( NAME, CMP, VERSION ) \
  ( __FOAM_VERSION__ CMP VERSION  && defined( __FOAM_BRANCH__ ) && __FOAM_BRANCH__ == NAME )

#define FOAM_REF_VERSION( CMP, VERSION )\
  ( __FOAM_VERSION__ CMP VERSION && !defined( __FOAM_BRANCH__ ) )


//---------------------------------------------------------------------------
// During the compilation, we have seen the strange warning:  dereferencing pointer <anonymous> does break strict aliasing rules
// It seems, it is bug in gcc v4.4. We tried compile managedFlu with gcc-4.5 and this warning wasn't appeared
// We wanted to selectively disable this , but  we couldn't restore warning flags. "Pragma GCC diagnostic pop(push)" doesn't work.
// We think it is bug, too. We have found patch for this case at http://gcc.gnu.org/ml/gcc-patches/2010-06/msg01255.html
// In next lines we disable "strict-aliasing" warning for gcc v4.4
#if defined(__GNUC__) && __GNUC__ == 4 && __GNUC_MINOR__ == 4
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif


//---------------------------------------------------------------------------
#endif
